"vim-plug
call plug#begin(has('win32') ? '~/vimfiles/plugged' : '~/.vim/plugged')
Plug 'dense-analysis/ale'
Plug 'tpope/vim-surround'
Plug 'preservim/nerdcommenter'
call plug#end()

"preload
if has('win32') | set enc=utf-8 | endif

"options
set backspace=indent,start
set backupcopy=yes nobackup noundofile
set expandtab shiftwidth=2 softtabstop=2 tabstop=8
set cursorline cursorlineopt=number
set fillchars=stlnc:-,vert:\|,fold:-
set hlsearch
set ignorecase
set laststatus=2
set list listchars=tab:·\ ,trail:~
set noincsearch
set numberwidth=2
set showcmd
set splitbelow splitright
set statusline=%<%f%m%r%=%y%l,%c%V
set textwidth=80 colorcolumn=+1
set wildmenu wildignorecase wildignore=.git/,.*.sw[a-p],.keep
nnoremap <C-z> <nop>
nnoremap <Leader>/ :let @/=''<CR>
nnoremap Ñ :
let c_syntax_for_h = 1

augroup vimrc_reload
    au!
    au BufWritePost .vimrc,_vimrc,vimrc,.gvimrc,_gvimrc,gvimrc so $MYVIMRC
    \ | if has('gui_running') && !empty($MYGVIMRC) | so $MYGVIMRC | endif
augroup END

augroup fo_clean
    au!
    au FileType * set fo-=o
augroup END

"terminal
nnoremap <Leader>tj :terminal<CR>
nnoremap <Leader>tl :vertical terminal<CR>
nnoremap <Leader>th :vertical terminal<CR><C-w>H

"netrw
let g:netrw_list_hide = '\.git[\/]$,\.sw[a-p]$,\.bak$,\~$'
let g:netrw_sort_sequence = '[\/]$,\.\(h\|c\)$,*'

"dense-analysis/ale
let g:ale_echo_msg_format = '(%linter%) %s'
let g:ale_lint_on_enter = 0
let g:ale_lint_on_insert_leave = 0
let g:ale_lint_on_text_changed = 'never'
let g:ale_set_loclist = 0
let g:ale_set_quickfix = 1
nmap <Leader>ad <Plug>(ale_detail)
nmap <Leader>af <Plug>(ale_fix)
nmap <Leader>aj <Plug>(ale_next)
nmap <Leader>ak <Plug>(ale_previous)
nmap <Leader>al <Plug>(ale_lint)
nmap <Leader>an <Plug>(ale_next_wrap)
nmap <Leader>ap <Plug>(ale_previous_wrap)
hi default link ALEWarningSign WarningMsg

"scrooloose/nerdcommenter
let g:NERDSpaceDelims = 1
let g:NERDDefaultAlign = 'left'
let g:NERDCustomDelimiters = {
    \ 'c': {'left': '//', 'right': ''}}

"environment
set background=dark
colorscheme default
